steps:
  # Provision clusters if need to
  - name: 'gcr.io/cloud-builders/gcloud'
    id: check-infra
    entrypoint: 'bash'
    args:
    - '-eEuo'
    - 'pipefail'
    - '-c'
    - |-
      cd hack && ./setup-gdt.sh

  # Build image 
  - name: 'gcr.io/cloud-builders/docker'
    id: build-image
    args: 
    - 'build' 
    - '-t'
    - 'us-docker.pkg.dev/${PROJECT_ID}/gdt-repo/locust-tasks:${COMMIT_SHA}'
    - '.'

  # Push image
  - name: 'gcr.io/cloud-builders/docker'
    id: push-image
    waitFor:
    - build-image
    args: 
    - 'push'
    - 'us-docker.pkg.dev/${PROJECT_ID}/gdt-repo/locust-tasks:${COMMIT_SHA}'



  # Deploy master into master cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    id: deploy-master
    waitFor:
    - check-infra
    - push-image
    entrypoint: 'bash'
    args:
    - '-eEuo'
    - 'pipefail'
    - '-c'
    - |-
      regions=`cat ./gke-config`
      region=`${regions}|awk '{print $1}'`
      master_cluster="testx-${region}"
      gcloud container clusters get-credentials ${master_cluster} --region ${region} --project ${PROJECT_ID}
      kubeclt create ns locust || true
      kustomize build manifests/master/. | kubeclt apply -f -



  # Waiting & retrieve external IP
  - name: 'gcr.io/cloud-builders/gcloud'
    id: retrieve-endpoint
    waitFor:
    - deploy-master
    entrypoint: 'bash'
    args:
    - '-eEuo'
    - 'pipefail'
    - '-c'
    - |-
      regions=`cat ./gke-config`
      region=`${regions}|awk '{print $1}'`
      master_cluster="testx-${region}"
      cat manifests/master/kustomization.yaml
      gcloud container clusters get-credentials ${master_cluster} --region ${region} --project ${PROJECT_ID}
      external_ip=""; while [ -z $external_ip ]; do echo "Waiting for end point..."; external_ip=$(kubectl get svc locust-master -n locust --template="{{range .status.loadBalancer.ingress}}{{.ip}}{{end}}" || true); [ -z "$external_ip" ] && sleep 10; done; echo "End point ready-" && echo $external_ip; export endpoint=$external_ip
      echo ${endpoint}
      sed -i 's/MASTER_HOST/'${endpoint}'/g' manifests/worker/kustomization.yaml
      cat manifests/worker/kustomization.yaml
      cp manifests/worker/kustomization.yaml /workspace


  # Deploy workers into worker cluster
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:372.0.0'
    entrypoint: 'bash'
    id: deploy-worker
    waitFor:
    - retrieve-endpoint
    args:
    - '-eEuo'
    - 'pipefail'
    - '-c'
    - |-
      cp /workspace/kustomization.yaml manifests/worker/kustomization.yaml
      cat manifests/worker/kustomization.yaml
      gcloud version
      regions=`cat ./gke-config`
      master_cluster="testx-`echo ${regions}|awk '{print $1}'`"
      echo "master_cluster => ${master_cluster}"
      for loc in ${regions[@]}
      do
        cluster="testx-${loc}"
        if [ ${master_cluster} != ${cluster} ]
          echo "Deploying into ${cluster} ... ..."
          gcloud container clusters get-credentials ${cluster} --region ${loc} --project ${PROJECT_ID}
          kubeclt create ns locust || true
          kustomize build manifests/worker/. | kubeclt apply -f -
          echo "Deploying into ${cluster} ... ...done"
          echo ""
        then
        fi
      done

substitutions:
    _MASTER_PIPELINE: gdt-app-master
    _WORKER_PIPELINE: gdt-app-worker
options:
  dynamicSubstitutions: true
  substitution_option: 'ALLOW_LOOSE'
